import Button from "@/components/Button";
import HeadLine from "@/components/HeadLine";
import Layout from "@/components/Layout";
import Navbar from "@/components/dashboard/Navbar";
import SideNavbar from "@/components/dashboard/SideNavbar";
import { firestoreDb } from "@/firebase";
import { collection, getDocs, orderBy, query } from "firebase/firestore";
import moment from "moment";
import { Poppins } from "next/font/google";
import Head from "next/head";
import { useEffect, useState } from "react";
import { ToastContainer } from "react-toastify";
const poppins = Poppins({ weight: ["400", "500", "700"], subsets: ["latin"] });

function Announcements() {
  const [announcement, setAnnouncement] = useState([]);
  const collectionRef = collection(firestoreDb, "announcements");
  const handleClick = (e) => {
    const thisEle = e.target;
    const thisParent = e.target.parentElement;
    const sliceDiv = thisParent.children[0];

    if (sliceDiv.classList.contains("hidden")) {
      sliceDiv.classList.remove("hidden");
      thisParent.children[1].classList.add("hidden");
      thisEle.innerText = "read more";
    } else {
      sliceDiv.classList.add("hidden");
      thisParent.children[1].classList.remove("hidden");
      thisEle.innerText = "read less";
    }
  };

  //fetch announcement function
  const fetchData = async () => {
    let dataArray = [];
    const q = query(collectionRef, orderBy("date", "desc"));
    const snapshot = await getDocs(q);
    if (!snapshot.empty) {
      snapshot.docs.forEach((doc) => {
        dataArray.push({ ...doc.data(), id: doc.id });
      });
      console.log(dataArray);
      setAnnouncement(dataArray);
    }
  };
  useEffect(() => {
    fetchData();
  }, []);
  return (
    <>
      <Head>
        <title>prayer time</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <Navbar />
      <main
        className={`${poppins.className} bg-gray-800 font-sans leading-normal tracking-normal mt-12`}
      >
        <div className="flex flex-col md:flex-row">
          <ToastContainer />
          <SideNavbar />
          <section className="bg-white p-6 w-full">
            <Layout className="mt-16">
              <HeadLine tittle="announce list" />
              {announcement &&
                announcement.map((list) => (
                  <div key={list.id}>
                    <span className="border-b-2 pb-1 pr-2 mb-3 inline-block mt-8">
                      {moment(list.date.toDate()).format(
                        "MMMM Do YYYY , h:mm:ss a"
                      )}
                    </span>
                    <div>
                      <div
                        className="text-lg mb-4 capitalize"
                        dangerouslySetInnerHTML={{
                          __html:
                            list?.announce.slice(0, 498) ||
                            "<h3>there is no announcements from DHIC</h3>",
                        }}
                      />
                      <div
                        className="text-lg mb-4 capitalize hidden"
                        dangerouslySetInnerHTML={{
                          __html:
                            list?.announce ||
                            "<h3>there is no announcements from DHIC</h3>",
                        }}
                      />
                      <Button name="read more" onClick={handleClick} />
                    </div>
                  </div>
                ))}
            </Layout>
          </section>
        </div>
      </main>
    </>
  );
}

export default Announcements;
